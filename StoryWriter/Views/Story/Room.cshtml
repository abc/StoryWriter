@model StoryWriter.Models.Room

@{
    ViewBag.Title = "Room";
}

<h2>Welcome to @Model.Name <small>Invite Code: @Model.Code</small></h2>

<h3>Co-Authors:</h3>
<ul id="user-list">
    @foreach (var user in Model.Writers)
    {
        <li id="user-list-item">
            @user.Name
        </li>
    }
</ul>

<h3>The story so far:</h3>

<div class="story-body" id="story-body">
   @Html.Partial("StoryText", Model.Story)
</div>



<div id="vote-container">
    <form id="vote-area">

    </form>
</div>
<div class="row">
    <div class="col-xl-9 col-lg-6 mb-4">
        <form action="~/Story/AddLine/@Model.Code" method="post">
            @Html.AntiForgeryToken()
            <label for="nextLine">Next line of the story:</label>
            <input class="form-control" size="120" maxlength="120" name="nextLine" id="nextLine" type="text" placeholder="And then, suddenly..." />
        </form>
    </div>
    <div class="col-xl-3 col-lg-6 mb-4">
        <h2 class="h6 font-weight-bold text-center mb-4">Time Left</h2>
        <div class="progress mx-auto" id="countdown-timer">
            <span class="progress-left">
                <span class="progress-bar border-primary"></span>
            </span>
            <span class="progress-right">
                <span class="progress-bar border-primary"></span>
            </span>
            <div class="progress-value w-100 h-100 rounded-circle d-flex align-items-center justify-content-center">
                <div class="h2 font-weight-bold"><span id="seconds-to-vote"></span><sub class="small">s</sub></div>
            </div>
        </div>
    </div>
</div>
<div>
    <a href="~/Story/LeaveRoom">Leave this room</a>
</div>

@section Scripts {
    <script>
        var progressMax = 60;

        function percentageToDegrees(percentage, max)
        {
            return percentage / max * 360
        }

        function updateTimer() {
            $(".progress").each(function () {
                var value = $(this).attr('data-value');
                var left = $(this).find('.progress-left .progress-bar');
                var right = $(this).find('.progress-right .progress-bar');

                if (value > 0) {
                    if (value <= progressMax / 2) {
                        right.css('transform', 'rotate(' + percentageToDegrees(value, progressMax) + 'deg)')
                    }
                    else {
                        right.css('transform', 'rotate(180deg)')
                        left.css('transform', 'rotate(' + percentageToDegrees(value - progressMax / 2, progressMax) + 'deg)')
                    }
                }
            });
        }

        let displayedVote = false;

        function update() {
            let fragmentText = $("#nextLine").val();

            var vote = $('#vote-area').find('input[name="vote"]').val();
            var update = { SenderId: "@Session[SessionVariables.UserId]", Fragment: fragmentText, FragmentId: vote };
            

            $.ajax({
                url: "@Url.Content("~/Story/Update/" + Model.Code)",
                data: update,
            })

                .done(function (data) {
                    $("#user-list").html("");
                    data.WritersPresent.forEach((element) => {
                         $("#user-list").append("<li>" + element.Name + "</li>");
                    });

                    if (data.VotesChanged) {
                        displayedVote = false;
                    }

                    if (data.TimeToVote) {
                        let fragments = data.FragmentsThisRound;

                        if (!displayedVote) {
                            $("#vote-area").empty();

                            fragments.forEach((element) => {
                                $("#vote-area").append("<div><input type=\"radio\" id=\"radio-"+element.Identifier+"\" name=\"vote\" value=\""+element.Identifier+"\">" + element.Text + "</input></div>")
                            });

                            displayedVote = true;
                        }
                    }

                    if (data.StoryUpdated) {
                        $.ajax({
                            url: "@Url.Content("~/Story/StoryText/" + Model.Code)",
                        })
                            .done(function (story) {
                                $("#story-body").html(story);
                            });
                    }

                    $('#countdown-timer').attr('data-value', data.SecondsToVote);
                    $('#seconds-to-vote').html(data.SecondsToVote);

                    updateTimer();

                if ( console && console.log ) {
                    console.log( data );
                }
            });
        }

        setInterval(function () {
            update();
        }, 1000);
    </script>
}